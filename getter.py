import requests
import json
import pyzipper
import os

path = '/tmp/malware/'
url = 'https://mb-api.abuse.ch/api/v1/'
password = b'infected'

os.makedirs(path)
os.makedirs(path + 'unpacked')


def get_list(type):
    if type == 'limit':
        type = '100'
    else:
        type = 'time'
    data = {'query': 'get_recent', 'selector': type}
    try:
        response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data)
    except Exception as e:
        print(e)
    return response.text


def make_hash_list(text):
    malware_json = json.loads(text)
    list_of_hashes = []
    for hash in malware_json['data']:
        list_of_hashes.append(hash['sha256_hash'])
    print(list_of_hashes)
    return list_of_hashes


def write_files_to_disk(path, list_of_shas):
    for item in list_of_shas:
        data = {'query': 'get_file', 'sha256_hash': str(item)}
        try:
            response = requests.post(url, data=data)
        except Exception as e:
            print(e)
        with open(path + item, 'wb') as f:
            f.write(response.content)


def write_cleartext_files(path, list_of_shas):
    for item in list_of_shas:
        with pyzipper.AESZipFile(path + item) as zf:
            zf.setpassword(password)
            zf.extractall(path + 'unpacked/')
            print(f'Finished unpacking into {item}')


def main():
    malware_list = get_list('100')
    list_for_downloads = make_hash_list(malware_list)
    write_files_to_disk(path, list_for_downloads)
    write_cleartext_files(path, list_for_downloads)


if __name__ == '__main__':
    main()

